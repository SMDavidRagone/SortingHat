import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;

import javax.swing.ImageIcon;

/*this is the parent class for all the
 * objects in the flappy lion project
 */
public class ScreenObj {
	//data I practice data hiding
	private int xLoc, yLoc;
	private int boundW, boundH;
	private Image [ ] myPics = null;
	private int maxWidth; //maxPictureWidth
	private int origW, origH;
	private int currentPic;
	private GameWindow1 gameW;
	
	
	//constructor(s)
	public ScreenObj(int x, int y, String fileName, String ext, int mW, GameWindow1 gw, int numOfPics)
	{
		xLoc = x;
		yLoc = y;
		gameW = gw;
		maxWidth = mW;
		
		readyPics(numOfPics, fileName, ext);
	}
	
	public void readyPics(int n, String fn, String ext)
	{
		myPics = new Image[n];
		for(int i = 0; i < myPics.length; i++)
		{
			String fullString = "";
			if(i < 10)
			{
				fullString += fn + 0 + Integer.toString(i) + ext;
			} else 
			{
				fullString += fn + Integer.toString(i) + ext;
			}
			System.out.println("Trying to open: " + fullString);
			
			
			
			boolean iLoaded = loadImage(fullString, i);
			if(iLoaded)
			{
				setBW(myPics[i].getWidth(null));
				setBH(myPics[i].getHeight(null));
				origW = myPics[i].getWidth(null);
				origH = myPics[i].getHeight(null);
				System.out.println("Pic width is " + myPics[i].getWidth(null));
				System.out.println("Pic height is " + myPics[i].getHeight(null));
				//do resizing if we need to
				if(getBW() > maxWidth)
			{
				int newH = (int)(maxWidth * (getBH() *1.0) / (getBW() *1.0));
			//update box width and height
				setBW(maxWidth);
				setBH(newH);
			}
		}
	}
}			
			
	//METHODS *******
	private boolean loadImage(String f, int whichPic)
	{
		boolean ok = false;
		try
		{
			ImageIcon ii = new ImageIcon(f);
			myPics[whichPic] = ii.getImage();
			ok = true;
		} catch (Exception e)
		{
			System.out.println("problem is loading " + f + " in loadingImage...");
		}
		
		return ok;
	}
	
	public void drawMe(Graphics g)
	{
		g.drawImage(myPics[currentPic], 
				getXLoc() - (int)(getBW()/2), 
				getYLoc() - (int)(getBH()/2), 
				getXLoc() + (int)(getBW()/2), 
				getYLoc() + (int)(getBH()/2), 
				0, 
				0, 
				origW, 
				origH, 
				null);
		
		//g.setColor(Color.BLACK);
		//g.drawRect(xLoc-(int)(boundW/2), yLoc-(int)(boundH/2), boundW, boundH);
		
		
		animate();
	}
	
	public void animate()
	{
		currentPic++;
		if(currentPic>= myPics.length)
		{
			currentPic = 0;
		}
	}
	
	///Accessor methods
	//Accessor methods for xloc and y loc

	public int getXLoc() {
		return xLoc;
	}
	
	public int getYLoc() {
		return yLoc;
	}
	
	public void setXLoc(int newX) {
		xLoc = newX;
	}
	
	public void setYLoc(int newY) {
		yLoc = newY;
	}
	
	//Accessor methods for boundW and boundH
	public int getBW() {
		return boundW;
	}
	
	public int getBH() {
		return boundH;
	}
	
	public void setBW(int newBW) {
		boundW = newBW;
	}
	
	public void setBH(int newBH) {
		boundH = newBH;
	}
	//New Accessor Methods
	public GameWindow1 getGameWindow1() 
	{
		return gameW;
	}
	
	public int getMaxWidth()
	{
		return maxWidth;
	}
	
}
