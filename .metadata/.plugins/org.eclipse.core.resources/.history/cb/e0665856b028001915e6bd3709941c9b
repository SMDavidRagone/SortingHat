import java.util.Arrays;

public class SortingHat {
	
	public static void main(String[] args)
	{
		int howMany = 100;
		int [ ] nums0 = getRandom(howMany);
		int [ ] nums1 = getAscendingOrder(howMany);
		System.out.println((Arrays.toString(nums0)));
		System.out.println((Arrays.toString(nums1)));
		
		SelectionSort sSort = new SelectionSort(nums0, "SelectionSort");
		
		
		BubbleSort bSort = new BubbleSort(nums1, "BubbleSort");
		
		
		
		
		
		
		
			
		
		
		}
	}
	
	public static void doTiming(PapaSort s)
	{
		
		
		long startT0 = System.currentTimeMillis();
		long startT1 = System.nanoTime();
		
		
		s.executeAlgorithm();
		
		long endT0 = System.currentTimeMillis();
		long endT1 = System.nanoTime();
		long theTime0 = endT0-startT0;
		long theTime1 = endT1-startT1;
		
		if(s.getLenght() <= 100)
		{
		System.out.println("The time for sort is "
				+ theTime1 + " nanoseconds.");
		} else {
			System.out.println("The time for bubble sort is: " 
		+ theTime0 + " miliseconds.");
		}
		/*
		long startT0 = System.currentTimeMillis();
		long startT1 = System.nanoTime();
		long endT0 = System.currentTimeMillis();
		long endT1 = System.nanoTime();
		long theTime0 = endT0-startT0;
		long theTime1 = endT1-startT1;
		
		if(s.getLenght() <= 100)
		{
		System.out.println("The time for selection sort is "
				+ theTime1 + " nanoseconds.");
		} else {
			System.out.println("The time for selection sort is: " 
		+ theTime0 + " miliseconds.");
	*/
	}
	
	
	
	public static int [ ] getRandom(int n)
	{
		int [] nList = new int[n];
		
		for(int i= 0; i < nList.length; i++)
		{
			nList[i]=(int)(Math.random()*1000);
		}
		
		
		
		return nList;
	}
	
	public static int [ ] getAscendingOrder(int n)
	{
		int [] nList = new int[n];
		
		for(int i= 0; i < nList.length; i++)
		{
			nList[i]=(i+1);
		}
		
		
		return nList;
	}
	
	
	
}
